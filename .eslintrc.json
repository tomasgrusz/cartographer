{
    "env": {
        "browser": true,
        "es2021": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "react",
        "unused-imports"
    ],
    "rules": {
        // allow jsx syntax in js files (for next.js project)
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }], //should add ".ts" if typescript project
        "indent": [
            "error",
            2
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "double"
        ],
        "@typescript-eslint/quotes": [
            "error",
            "double",
            {
              "allowTemplateLiterals": true
            }
        ],
        "jsx-quotes": [2, "prefer-double"],
        "@typescript-eslint/no-explicit-any": "off",
        "no-throw-literal": "off", // use ts version
        "@typescript-eslint/no-confusing-void-expression": [
          "off",
          { "ignoreVoidOperator": true }
        ],
        "@typescript-eslint/no-unused-vars": "warn",
        "no-unused-expressions": "off", // uss ts version
        "@typescript-eslint/no-unused-expressions": "error",
        "prefer-promise-reject-errors": "off", // use ts version
        "@typescript-eslint/ban-ts-comment": [
          "error",
          {
            "ts-expect-error": "allow-with-description",
            "ts-ignore": true,
            "ts-nocheck": true,
            "ts-check": false,
            "minimumDescriptionLength": 10
          }
        ],
        "curly": "warn",
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/no-noninteractive-element-interactions": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "react/prop-types": "off",
        "no-case-declarations": "off",
        "react/no-unknown-property": "off",
        "no-console": "off",
        "no-async-promise-executor": "off",
        "prefer-const": [
        "warn",
        {
            "destructuring": "all",
            "ignoreReadBeforeAssign": false
        }
        ],
        "max-len": [
        "warn",
        {
            "code": 180,
            "tabWidth": 4
        }
        ],
        "no-var": "warn",
        "comma-spacing": "warn",
        "semi": ["warn", "always"],
        "object-curly-spacing": ["warn", "always"],
        "object-shorthand": "warn",
        "quote-props": ["warn", "as-needed"],
        "react/react-in-jsx-scope": 0,
        "no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["warn"],
        "array-callback-return": "error",
        "no-await-in-loop": "warn",
        "no-template-curly-in-string": "warn",
        "no-constant-binary-expression": "error",
        "no-constructor-return": "error",
        "no-promise-executor-return": "error",
        "no-unmodified-loop-condition": "warn",
        "no-unreachable-loop": "error",
        "no-unused-private-class-members": "error",
        "no-use-before-define": "error",
        "require-atomic-updates": "error"
    },
    "overrides": [
        {
          "files": ["**/components/models/**/*.ts", "**/components/models/**/*.tsx"],
          "rules": {
            "react/no-unknown-property": "off"
          }
        },
        {
            "files": ["**/data/**/*.ts", "**/data/**/*.tsx"],
            "rules": {
              "@typescript-eslint/no-unused-vars": "off",
              "unused-imports/no-unused-vars": "off"
            }
        }
    ]
}
